function [xShift, yShift, zShift] = fun_31_ContourShift(path_matData_nonVG, TP, TM)

    close all;
    
    % final
    junk = find(contains(TP.Fraction, 'Final'));
    idx = junk(1);
    if TM.SSS{idx}
        matfd = fullfile(path_matData_nonVG, TP.folder_Patient{idx});
        iST = 1;
        matffn{iST} = fullfile(matfd, TM.FileName_matData{idx});
        FractionName{iST} = TP.Fraction{idx};

%         [contData] = fun_getContourData(matffn);
%         STC(iFig) = contData.CMR;
%         zR = [STC(iFig).sliceC.z]';
%         zShift(iFig) = 0;
%         xShift(iFig) = 0;
%         yShift(iFig) = 0;
% 
%         [CMR(iFig)] = fun_viewContour3D(matffn, matfd, FractionName{iFig}, iFig);
        
        % fractions
        indFrac = find(~contains(TP.Fraction, 'Final'));
        for m = 1:length(indFrac)
            iFrac = indFrac(m);
            iST = iST+1;
            matffn{iST} = fullfile(matfd, TM.FileName_matData{iFrac});
            FractionName{iST} = TP.Fraction{iFrac};
        end
        
%         iST = iST+1;
for    iFig = 1:3
        [hF(iFig), hA(iFig)] = fun_addFig(iFig);
%         hA(iST).Title.String = '3CMRing';
%         hA(iST).Title.Color = 'w';
%         hF(iST).WindowState = 'maximized';
end
        CLR = 'rgbcmyw';
        for iST = 1:length(matffn)
            [contData] = fun_getContourData(matffn{iST});
            STC(iST) = contData.CMR;
            z{iST} = [STC(iST).sliceC.z]';
            zShift(iST) = mode(z{1} - z{iST});

            for iSlice = 1:length(STC(iST).sliceC)
%                 for iSubC = 1:length(STC(iST).sliceC(iSlice).subC)
                    iSubC = 1;
                    xx = STC(iST).sliceC(iSlice).subC{iSubC}(:,1);
                    xxm{iST}(iSlice) = mean(xx);
                    yy = STC(iST).sliceC(iSlice).subC{iSubC}(:,2);
                    yym{iST}(iSlice) = mean(yy);
                    zz = STC(iST).sliceC(iSlice).subC{iSubC}(:,3);
                    line(hA(1), xx, yy, zz, 'Color', CLR(iST), 'LineWidth', 1);

                    xShift{iST}(iSlice) = xxm{}(iSlice) - xxm{iST}(iSlice);
                    yShift{iST}(iSlice) = yym{1}(iSlice) - yym{iST}(iSlice);
                    
                    zz = zz+zShift(iST);
                    line(hA(2), xx, yy, zz, 'Color', CLR(iST), 'LineWidth', 1);
%                 end

%                     xx = xx+xShift{iST};
%                     line(hA(2), xx, yy, zz, 'Color', CLR(iST), 'LineWidth', 1);
            end
        end
    
%         LGD = legend(hA(iFig), FractionName, 'Interpreter', 'none');
%         LGD.TextColor = 'w';
%         LGD.FontSize = 16;
        axis(hA, 'equal', 'tight')

%         figffn = fullfile(matfd, ['Contour3D_3CMRing.png']);    
%         saveas(hF(iFig), figffn)    
    end
    

